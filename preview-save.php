<?php/* Coje los datos de las apis y los guarda en bbdd */session_start();error_reporting(E_ALL ^ E_NOTICE);require_once "vendor/autoload.php";require_once "secret.php";require_once "classes/class.instagram.php";require_once "classes/class.twitter.php";$loader = new Twig_Loader_Filesystem('templates/');$twig = new Twig_Environment($loader, array());$db = new MysqliDb (HOST,USER,PASSWORD,DATABASE);$twitterclass = new Twitter();$session = false;  $twitter = false; $results = array();if($_SESSION['access_token']) {    $session = true;  } else {    echo "<h2>No session</h2>"; die;}if ($_GET['id']) {    $searchs = $db->get('searchs')->where('id', $_GET['id']);    if($searchs['type'] == '1') {        if($searchs['tag']) {             $results = Instagram::getMediaTag($searchs['tag'],$_SESSION['access_token']);              SaveMedia($results);        }    } else {            }       /* $tag = $_GET['tag'];     $results = Instagram::getMediaTag($tag,$_SESSION['access_token']);     $results = array_merge($twitterclass->getByTag($tag),$results);    shuffle($results);  }else if($_GET['more'] == '1'){    $url = $_GET['url']; $tag = $_GET['tag'];    $results = Instagram::getMoreResults($url);    if($_GET['lastid'] && $_GET['tag']){        $lastid = $_GET['lastid'];        $results = array_merge($twitterclass->getByTag($tag,$lastid),$results);    }    if($_GET['lastid'] && $_GET['user']){        $lastid = $_GET['lastid'];        $results = array_merge($twitterclass->getByUsername($username,$lastid),$results);    }    shuffle($results);*/    } else {        echo "Necesitamos un par√°metro id"; die;} function saveMedia($results){    global $db;    }